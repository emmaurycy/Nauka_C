/* Napisz funkcj  ̨e, która dostaje jako argumenty dwuwymiarow  ̨a prostok  ̨atn  ̨a tablic  ̨e

tablic tab1 o wymiarach n × m i elementach typu int oraz jej wymiary, i zwraca jako war-
tość wskaźnik do nowo utworzonej dwuwymiarowej tablicy tablic tab2 o wymiarach m × n

zawieraj  ̨acej transponowan  ̨a macierz przechowywan  ̨a w tablicy tab1 (czyli dla dowolnych k
i j zachodzi tab1[k][j] = tab2[j][k]). Przetestuj funkcj  ̨e w prostym programie.*/


#include <stdio.h>

int* funkcja (int n, int m, int tab1[n][m]);

int main(void) {

int n=3, m=3, j, k;
int tab1[3][3]={{1,2,3},{4,5,6},{7,8,9}};


 funkcja(3, 3, tab1);
  
  
  return 0;
}

int* funkcja (int n, int m, int tab1[n][m]){

  int k, j;
  int tab2[m][n];

  for(k=0; k<n; k++){
    for(j=0; j<m; j++){
      printf("%d ",tab1[k][j]);
    }
    printf("\n");
  }
  printf("\n");
  

  for(j=0; j<n; j++){
    for(k=0; k<m; k++){
      tab2[j][k]=tab1[k][j];
    printf("%d ", tab2[j][k]);
    }
    printf("\n");
  }

  return tab2;
}
